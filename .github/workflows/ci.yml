name: ci

on:
  workflow_dispatch:
  pull_request_target:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
        toolchain:
          - { compiler: intel, version: "2025.0" }
          - { compiler: intel-classic, version: "2021.12" }
        python-version:
          - "3.13"
        meson-version:
          - "meson==1.4.2"
          - "meson==1.5.0"
          - "meson==1.5.1"
          - "meson==1.5.2"
          - "meson==1.6.0"
          - "meson==1.6.1"
          - "meson==1.7.0"
          - "https://github.com/mesonbuild/meson/archive/1412abc516e56b7d90f36fc75acb3e4b8c294e30.zip"
          - "meson==1.7.1"
          - "meson==1.7.2"
          - "meson==1.8.0"
          - "meson==1.8.1"
          - "meson==1.8.2"
          - "git+https://github.com/mesonbuild/meson.git"
        include:
          # baseline
          - os: ubuntu-latest
            toolchain: { compiler: intel, version: "2025.0" }
            python-version: "3.13"
            meson-version: "meson==1.7.0"
          - os: windows-latest
            toolchain: { compiler: gcc, version: 13 }
            python-version: "3.13"
            meson-version: "meson==1.7.0"

    steps:
      - uses: actions/checkout@v4

      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv venv
          uv pip install "${{ matrix.meson-version }}" meson-python ninja

      - name: Build binaries
        run: |
          uv run meson setup build
          cd build
          uv run meson compile --verbose

      - name: Test
        run: |
          uv sync --group test
          uv run pytest
